PART
{
	name = KrakenGenerator
	module = Part
	author = Well

	MODEL
	{
		model = KrakenScience/Assets/KrakenGenerator	
	}
	
	rescaleFactor = 1
	node_attach = -0.02, 0.0, 0.0, 0.0, 0.0, 1.0
	TechRequired = advScienceTech
	entryCost = 15000
	cost = 5000
	category = Utility
	subcategory = 0
	title = Kraken Generator
	manufacturer = Glowing Kraken Industries
	description = A Kraken Generator comprises a power source, a heat producing shield that converts Kraken radiation into thermal energy, and an electricity generator. The power of Kraken for exploration and development. This Generator is also a Kraken Juice converter. The Kraken Juice production unit was plagued, however, by reliability problems in the past.
	attachRules = 0,1,0,0,1
	mass = 0.1
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 7
	explosionPotential = 0.5
	maxTemp = 2000 // = 2900
	bulkheadProfiles = srf
	tags = kraken specimen glowing industries generator Juice Kj
	
	MODULE
	{
		name = ModuleGenerator
		isAlwaysActive = true
		OUTPUT_RESOURCE
		{
			name = ElectricCharge
			rate = 2.50
		}
	}
	
	
	MODULE
	{
		name = ModuleResourceConverter
		ConverterName = Kraken Juice
		StartActionName = Start Production [Kj]
		StopActionName = Stop Production [Kj]
		AutoShutdown = true
		
		

		TemperatureModifier
		{
			key = 0 10000
			key = 250 5000
			key = 500 2500
			key = 750 250
			key = 1000 0
		}	
				
		GeneratesHeat = true
		DefaultShutoffTemp = .8
		ThermalEfficiency 
		{
			key = 0 0 0 0
			key = 500 0.9 0 0
			key = 1000 1.0 0 0
			key = 1250 0.9 0 0
			key = 1500 0.6 0 0
			key = 3000 0.3 0 0
			key = 5000 0.0 0 0
		}

		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		UseSpecialistHeatBonus = true
		SpecialistHeatFactor = 0.1
		ExperienceEffect = ConverterSkill
		EfficiencyBonus = 1

		 INPUT_RESOURCE
		 {
			ResourceName = ElectricCharge
			Ratio = 80
		 }
		 OUTPUT_RESOURCE
		 {
			ResourceName = KrakenJuice
			Ratio = 0.00001
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		 }
	}
	
	MODULE
	{
		name = ModuleCoreHeat
		CoreTempGoal = 500					//Internal temp goal - we don't transfer till we hit this point
		CoreToPartRatio = 0.1				//Scale back cooling if the part is this % of core temp
		CoreTempGoalAdjustment = 0			//Dynamic goal adjustment
		CoreEnergyMultiplier = 0.1			//What percentage of our core energy do we transfer to the part
		HeatRadiantMultiplier = 0.25		//If the core is hotter, how much heat radiates?
		CoolingRadiantMultiplier = 0		//If the core is colder, how much radiates?
		HeatTransferMultiplier = 0			//If the part is hotter, how much heat transfers in?
		CoolantTransferMultiplier = 0.01	//If the part is colder, how much of our energy can we transfer?
		radiatorCoolingFactor = 1			//How much energy we pull from core with an active radiator?  >= 1
		radiatorHeatingFactor = 0.05		//How much energy we push to the active radiator
		MaxCalculationWarp = 1000			//Based on how dramatic the changes are, this is the max rate of change
		CoreShutdownTemp = 1000				//At what core temperature do we shut down all generators on this part?
		MaxCoolant = 100					//Maximum amount of radiator capacity we can consume - 50 = 1 small
	}	
	
}
